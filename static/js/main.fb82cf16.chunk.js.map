{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","dataList","setDataList","searchText","setSearchText","activeRow","setActiveRow","loading","setLoading","useEffect","fetch","then","res","json","result","newDataList","filter","data","firstName","toLowerCase","includes","className","src","alt","id","action","type","placeholder","name","value","onChange","target","map","onClick","lastName","email","phone","cols","rows","readOnly","description","address","streetAddress","city","state","zip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA4HeA,MAzHf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACAC,qBAAU,WACRD,GAAW,GACXE,MAAM,oDAAoDC,MAAK,SAACC,GAC9DA,EAAIC,OAAOF,MAAK,SAACG,GACfN,GAAW,GACXN,EAAYY,WAGf,IACH,IAAMC,EAAcd,EAASe,QAAO,SAACC,GAAD,OAClCA,EAAKC,UAAUC,cAAcC,SAASjB,EAAWgB,kBAGnD,OACE,qBAAKE,UAAU,MAAf,SACGd,EACC,qBAAKc,UAAU,sBAAf,SACE,qBAAKC,IAAI,iBAAiBC,IAAI,cAGhC,iCACE,sBAAKC,GAAG,gBAAR,UACE,uBAAMC,OAAO,IAAb,UACE,qBAAKH,IAAI,oBAAoBC,IAAI,gBACjC,uBACEG,KAAK,OACLC,YAAY,kBACZC,KAAK,aACLJ,GAAG,aACHK,MAAO1B,EACP2B,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BzB,EAAcyB,SAIvD,sBAAKL,GAAG,gBAAR,UACE,qBAAKA,GAAG,gBAAR,SACE,gCACE,gCACE,+BACE,oBAAIH,UAAU,UAAd,gBACA,oBAAIA,UAAU,UAAd,uBACA,oBAAIA,UAAU,UAAd,sBACA,oBAAIA,UAAU,UAAd,mBACA,oBAAIA,UAAU,UAAd,4BAMR,qBAAKG,GAAG,aAAR,SACE,gCACE,gCACGT,EAAYiB,KAAI,SAACf,GAAD,OACf,qBACEI,UAAS,mBACPhB,GAAaA,EAAUmB,KAAOP,EAAKO,IAAM,UAG3CS,QAAS,kBAAM3B,EAAaW,IAL9B,UAOE,oBAAII,UAAU,UAAd,SAAyBJ,EAAKO,KAC9B,oBAAIH,UAAU,UAAd,SAAyBJ,EAAKC,YAC9B,oBAAIG,UAAU,UAAd,SAAyBJ,EAAKiB,WAC9B,oBAAIb,UAAU,UAAd,SAAyBJ,EAAKkB,QAC9B,oBAAId,UAAU,UAAd,SAAyBJ,EAAKmB,UAPzBnB,EAAKO,mBAgBxB,sBAAKA,GAAG,eAAR,UACE,yCACA,kFACCnB,GACC,sBAAKmB,GAAG,eAAR,UACE,gCACE,+CADF,IACyBnB,EAAUa,UAAW,IAC3Cb,EAAU6B,YAEb,gCACE,8CACA,0BACEG,KAAK,KACLC,KAAK,IACLC,UAAQ,EACRV,MAAOxB,EAAUmC,iBAGrB,gCACE,yCACCnC,EAAUoC,QAAQC,iBAErB,gCACE,sCACCrC,EAAUoC,QAAQE,QAErB,gCACE,uCACCtC,EAAUoC,QAAQG,SAErB,gCACE,qCACCvC,EAAUoC,QAAQI,mBCrGtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fb82cf16.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [dataList, setDataList] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [activeRow, setActiveRow] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://60eedf19eb4c0a0017bf468a.mockapi.io/data\").then((res) => {\n      res.json().then((result) => {\n        setLoading(false);\n        setDataList(result);\n      });\n    });\n  }, []);\n  const newDataList = dataList.filter((data) =>\n    data.firstName.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div className=\"preloader-container\">\n          <img src=\"/preloader.gif\" alt=\"loading\" />\n        </div>\n      ) : (\n        <main>\n          <div id=\"table-section\">\n            <form action=\"/\">\n              <img src=\"./search-icon.svg\" alt=\"Search Icon\" />\n              <input\n                type=\"text\"\n                placeholder=\"Enter something\"\n                name=\"search-box\"\n                id=\"search-box\"\n                value={searchText}\n                onChange={({ target: { value } }) => setSearchText(value)}\n              />\n            </form>\n\n            <div id=\"table-wrapper\">\n              <div id=\"table-headers\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th className=\"column1\">Id</th>\n                      <th className=\"column2\">FirstName</th>\n                      <th className=\"column3\">LastName</th>\n                      <th className=\"column4\">Email</th>\n                      <th className=\"column5\">Phone</th>\n                    </tr>\n                  </thead>\n                </table>\n              </div>\n\n              <div id=\"table-data\">\n                <table>\n                  <tbody>\n                    {newDataList.map((data) => (\n                      <tr\n                        className={`data-row ${\n                          activeRow && activeRow.id === data.id && \"active\"\n                        }`}\n                        key={data.id}\n                        onClick={() => setActiveRow(data)}\n                      >\n                        <td className=\"column1\">{data.id}</td>\n                        <td className=\"column2\">{data.firstName}</td>\n                        <td className=\"column3\">{data.lastName}</td>\n                        <td className=\"column4\">{data.email}</td>\n                        <td className=\"column5\">{data.phone}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n\n          <div id=\"info-wrapper\">\n            <h1>Details</h1>\n            <p>Click on a table item to get detailed information</p>\n            {activeRow && (\n              <div id=\"info-content\">\n                <div>\n                  <b>User selected:</b> {activeRow.firstName}{\" \"}\n                  {activeRow.lastName}\n                </div>\n                <div>\n                  <b>Description: </b>\n                  <textarea\n                    cols=\"50\"\n                    rows=\"5\"\n                    readOnly\n                    value={activeRow.description}\n                  ></textarea>\n                </div>\n                <div>\n                  <b>Address:</b>\n                  {activeRow.address.streetAddress}\n                </div>\n                <div>\n                  <b>City:</b>\n                  {activeRow.address.city}\n                </div>\n                <div>\n                  <b>State:</b>\n                  {activeRow.address.state}\n                </div>\n                <div>\n                  <b>Zip:</b>\n                  {activeRow.address.zip}\n                </div>\n              </div>\n            )}\n          </div>\n        </main>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}